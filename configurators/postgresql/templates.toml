default_language = "en"

[config."caraneer-config-postgresql/amount-invalid"]
type = "error_message"
description.en = "Invalid amount\nThe amount must be an integer greater than or equal 0"

[config."caraneer-config-postgresql/roles.amount"]
type = "string"
description.en = "Amount of additional roles for the postgresql database"
default = 0

[config."caraneer-config-postgresql/roles.template.name"]
type = "string"
description.en = "Role #${index} name"
default = ""

[config."caraneer-config-postgresql/roles.template.has_owned_schema"]
type = "boolean"
description.en = "Role #${index} has owned schema"
default = false

[config."caraneer-config-postgresql/roles.template.auth"]
type = { "multi_choice" = [
	{ value = "localhost", description.en = "Password (scram-sha-256) from localhost" },
	{ value = "lan", description.en = "Password (scram-sha-256) from LAN" },
	{ value = "wan", description.en = "TLS-encrypted password (scram-sha-256) from anywhere on the internet" },
	{ value = "unix", description.en = "Unix socket connection (name matching client process uid)" },
] }
description.en = "Authentication methods for role #${index} - may be empty if this is intended to be a group"
default = ["unix"]

[config."caraneer-config-postgresql/roles.template.password"]
type = "password"
description.en = "Password for roles #${index} - may be blank if no password authentication methods were chosen"
default = ""

[config."caraneer-config-postgresql/roles.template.databases"]
type = "string"
description.en = "Comma-seperated list of accessible databases for role #${index}"
default = "all,replication"

[config."caraneer-config-postgresql/roles.template.roles"]
type = "string"
description.en = "Comma-seperated roles role #${index} is a member of"
default = ""

[config."caraneer-config-postgresql/roles.template.options"]
type = { "multi_choice" = [
	{ value = "SUPERUSER", description.en = "Super-user" },
	{ value = "CREATEDB", description.en = "Create databases" },
	{ value = "CREATEROLE", description.en = "Create roles" },
	{ value = "REPLICATION", description.en = "Replication" },
] }
description.en = "Attributes for role #${index}"
default = []

[config."caraneer-config-postgresql/ssl_mode"]
type = { "single_choice" = [
  { value = "off", description.en = "Disable TLS for PostgreSQL" },
  { value = "certbot", description.en = "Enable TLS using Certbot (Let's Encrypt) certs" },
  { value = "acmetool", description.en = "Enable TLS using acmetool certs" },
] }
description.en = "TLS termination mode for PostgreSQL"
default = "off"

[config."caraneer-config-postgresql/ssl_domain"]
type = "string"
description.en = "Domain name used for TLS certificate (required if TLS is enabled)"
default = ""

[config."caraneer-config-postgresql/replication.amount"]
type = "string"
description.en = "Amount of downstream logical replications"
default = 0

[config."caraneer-config-postgresql/replication.template.database"]
type = "string"
description.en = "Local database name for logical replication #${index}"
default = ""

[config."caraneer-config-postgresql/replication.template.publication"]
type = "string"
description.en = "logical replication #${index} publication name"
default = ""

[config."caraneer-config-postgresql/replication.template.upstream"]
type = "string"
description.en = "postgresql URL for upstream source for publication #${index}"
default = "postgresql://dbmaster:5433/mydb"

[config."caraneer-config-postgresql/cleanup.amount"]
type = "string"
description.en = "Amount of databases to periodically check for stale logical replication subscriptions"
default = 0

[config."caraneer-config-postgresql/cleanup.template.database"]
type = "string"
description.en = "Local database name for cleanup check #${index}"
default = "postgres"

[config."caraneer-config-postgresql/cleanup.template.size_limit"]
type = "string"
description.en = "Maximum gigabyte lag for cleanup check #${index}\nMust be a whole number"
default = "20"
